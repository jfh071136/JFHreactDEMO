 组件三大核心属性1: state

	 
	理解
	
		1.	state是组件对象最重要的属性, 值是对象(可以包含多个key-value的组合)
		2.	组件被称为"状态机", 通过更新组件的state来更新对应的页面显示(重新渲染组件)
		
	强烈注意
	
		1.	组件中render方法中的this为组件实例对象
		
		2.	组件自定义的方法中this为undefined，如何解决？		
			a)	强制绑定this: 通过函数对象的bind()
			b)	箭头函数 前面必須賦值語句 const NAME = ()=>
		
		3.	状态数据，不能直接修改或更新 要借助SetState

講解:https://www.youtube.com/watch?v=T2gXMG9Et6I&list=PLmOn9nNkQxJFJXLvkNsGsoCUxJLqyLGxu&index=19


### setState更新状态的2种写法


	(1). setState(stateChange, [callback])------对象式的setState    
            1.stateChange为状态改变对象(该对象可以体现出状态的更改)
            2.callback是可选的回调函数, 它在状态更新完毕、界面也更新后(render调用后)才被调用    !![callback]可以用來調最新的state的值
					
	(2). setState(updater, [callback])------函数式的setState
            1.updater为返回stateChange对象的函数。
            2.updater可以接收到state和props。
            4.callback是可选的回调函数, 它在状态更新、界面也更新后(render调用后)才被调用。



总结:
		1.对象式的setState是函数式的setState的简写方式(语法糖)
		2.使用原则：
				(1).如果新状态不依赖于原状态 ===> 使用对象方式
				(2).如果新状态依赖于原状态 ===> 使用函数方式
				(3).如果需要在setState()执行后获取最新的状态数据, 
					要在第二个callback函数中读取

State Hook:
    (1) State Hook让函数组件也可以有state状态, 并进行状态数据的读写操作
    (2) 语法: const [xxx, setXxx] = React.useState(initValue)  
    (3) useState()说明:
           参数: 第一次初始化指定的值在内部作缓存
           返回值: 包含2个元素的数组, 第1个为内部当前状态值, 第2个为更新状态值的函数
    (4) setXxx()2种写法:
            setXxx(newValue): 参数为非函数值, 直接指定新的状态值, 内部用其覆盖原来的状态值
            setXxx(value => newValue): 参数为函数, 接收原本的状态值, 返回新的状态值, 内部用其覆盖原来的状态值